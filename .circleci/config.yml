---
version: 2
jobs:
  pr_check:
    docker:
      - image: circleci/python:3.7.6
      - image: circleci/mysql:5.6.41
        environment:
          MYSQL_ROOT_PASSWORD: Comp23329002@
          MYSQL_DATABASE: acc_data
          MYSQL_USER: root
    steps:
      - checkout
      - run:
          name: Install All Dependencies
          command: |
            sudo pip install django==3.0.2
            sudo pip install djangorestframework
            sudo pip install mysqlclient
            sudo pip install django_mysql
            sudo pip install bcrypt==3.1.7
            sudo pip install django-file-md5
            sudo pip install boto3
            sudo pip install django-storages
            sudo pip install pymysql
            sudo pip install django-statsd==2.5.0
            sudo pip install celery==4.4.2
            sudo pip install sqlalchemy
            sudo apt-get install rabbitmq-server -y
            sudo apt-get -y install libcurl4-openssl-dev libssl-dev python3-dev
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Running MySQL
          command: |
            sudo apt-get update
            sudo apt-get install default-mysql-client
      - run:
          name: Running tests
          command: |
            cd myaccountapp
            python3 manage.py test

  build:
    filters:
      branches:
        only:
          - master
    docker:
      - image: circleci/python:3.7.6
      - image: circleci/mysql:5.6.41
        environment:
          MYSQL_ROOT_PASSWORD: Comp23329002@
          MYSQL_DATABASE: acc_data
          MYSQL_USER: root
    steps:
      - checkout
      - run:
          name: Install All Dependencies
          command: |
            sudo pip install django==3.0.2
            sudo pip install djangorestframework
            sudo pip install mysqlclient
            sudo pip install django_mysql
            sudo pip install bcrypt==3.1.7
            sudo pip install django-file-md5
            sudo pip install boto3
            sudo pip install django-storages
            sudo pip install pymysql
            sudo pip install django-statsd==2.5.0
            sudo pip install celery==4.4.2
            sudo pip install sqlalchemy
            sudo apt-get install rabbitmq-server -y
            sudo apt-get -y install libcurl4-openssl-dev libssl-dev python3-dev

      - run:
          name: Zip Artifact
          command: |
            echo "Hello the current build number is ${CIRCLE_BUILD_NUM}"
            pwd
            mkdir -p codedeploy_artifact
            pwd
            ls -al
            cd scripts
            chmod +x *.sh
            cd ..
            zip -r csye6225-web-app-${CIRCLE_BUILD_NUM}.zip myaccountapp scripts *.yml
            mv csye6225-web-app-${CIRCLE_BUILD_NUM}.zip codedeploy_artifact/
            cd codedeploy_artifact
            ls -al
            pwd
            cd ..
            pwd
            ls -al
      - run:
          name: upload Artifact to S3
          command: |
            sudo pip install awscli
            cd codedeploy_artifact
            aws s3 cp csye6225-web-app-${CIRCLE_BUILD_NUM}.zip s3://${CODEDEPLOY_S3}

      - run:
          name: Call codeploy to deploy application
          command: |
            aws configure list
            aws configure set region us-east-1
            aws deploy create-deployment --application-name ${APPLICATION_NAME} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${DEPLOYMENT_GROUP_NAME} --s3-location bucket=${CODEDEPLOY_S3},bundleType=zip,key=csye6225-web-app-${CIRCLE_BUILD_NUM}.zip

workflows:
  version: 2
  pr-check-workflow:
    jobs:
      - pr_check

  build-deploy-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: master